{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/xiaogong.png","path":"img/xiaogong.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/LICENSE","path":"live2d-widget/LICENSE","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/README.md","path":"live2d-widget/README.md","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/autoload.js","path":"live2d-widget/autoload.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/live2d.min.js","path":"live2d-widget/live2d.min.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/package.json","path":"live2d-widget/package.json","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/rollup.config.js","path":"live2d-widget/rollup.config.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/waifu-tips.js","path":"live2d-widget/waifu-tips.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/waifu-tips.json","path":"live2d-widget/waifu-tips.json","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/waifu.css","path":"live2d-widget/waifu.css","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/assets/screenshot-1.png","path":"live2d-widget/assets/screenshot-1.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/assets/screenshot-2.png","path":"live2d-widget/assets/screenshot-2.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/assets/screenshot-3.png","path":"live2d-widget/assets/screenshot-3.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/demo/demo.html","path":"live2d-widget/demo/demo.html","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/demo/login.html","path":"live2d-widget/demo/login.html","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/src/index.js","path":"live2d-widget/src/index.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/src/message.js","path":"live2d-widget/src/message.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/src/model.js","path":"live2d-widget/src/model.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/src/tools.js","path":"live2d-widget/src/tools.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/src/utils.js","path":"live2d-widget/src/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/live2d-widget/src/waifu-tips.js","path":"live2d-widget/src/waifu-tips.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"190968180bd9b1b6f01c11ebf9d9c6e321edef62","modified":1683794123286},{"_id":"source/_posts/Mybatis-plus中，在新增或修改时，自动插入或修改某个字段值.md","hash":"de9ef32786d5b3aba738429e7af40ed4b5fecb64","modified":1688655412921},{"_id":"source/_posts/一行代码关闭windows端口服务.md","hash":"dc82e1ae5518f8bbe9b7890f8355a2ca35bb569e","modified":1688655425317},{"_id":"source/_posts/一行代码判断字符串是否为某格式的时间.md","hash":"85999eeec2279ddcd97b1ef108dd4e4b75ce0168","modified":1688655421539},{"_id":"source/_posts/以热爱为前提写代码-读码农翻身有感.md","hash":"a691458198d27230a1adabb3c35d6d3db3d98dc5","modified":1688655415508},{"_id":"source/_posts/网站介绍.md","hash":"b6975780cf994fd423f775668b9800b4d2fcd9fe","modified":1688655427122},{"_id":"source/_posts/跨域问题后端配置，粘贴即用！.md","hash":"98a5800e4bb6de74c0b280db58f4d40ab47ab39b","modified":1688655428961},{"_id":"source/categories/index.md","hash":"f29faf7e16f302a750920e2a515b9400b05ab164","modified":1683813725495},{"_id":"source/tags/index.md","hash":"75d91a103c5c8e33025611919aa5a69b33954709","modified":1683813740319},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1683796935214},{"_id":"themes/butterfly/README.md","hash":"46869886ed9ce4beedaad5b064789fd15861566e","modified":1683796935215},{"_id":"themes/butterfly/README_CN.md","hash":"b95c89559c429049caa3f9f461a2b41ae98c0d68","modified":1683796935215},{"_id":"themes/butterfly/_config.yml","hash":"bc5ca368ff30bbc7afeffbcd44b618ea1c039af1","modified":1688655549184},{"_id":"themes/butterfly/package.json","hash":"3fb8ed0d811684fd030ae08cbf49743e4d61e017","modified":1683796935317},{"_id":"themes/butterfly/plugins.yml","hash":"9c0947dc1c5daa6779cba36865a94068d58c6f46","modified":1683796935318},{"_id":"themes/butterfly/languages/default.yml","hash":"d444cbb5c5456aaf27f3fb1b4308634689c7bb53","modified":1683796935218},{"_id":"themes/butterfly/languages/en.yml","hash":"4957fd976c99745d3aa24000a85b2955e8d1cf81","modified":1683796935218},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"cc8672dc0c2762b694f689cbeb6e34810f1c194e","modified":1683796935219},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"145ec301db185c8a06de1f34a77ca391e1d2729b","modified":1683796935220},{"_id":"themes/butterfly/layout/archive.pug","hash":"115fa5ee8864e5c97549eff91a17c66101d724ab","modified":1683796935221},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1683796935222},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1683796935313},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1683796935314},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1683796935315},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1683796935316},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"92683cb785a29e5a73701b33dba73d3afac268c3","modified":1683796935208},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"d9ff4bad9c9664e12729c7a531169a05698a3fd1","modified":1683796935209},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1683796935210},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1683796935212},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1683796935213},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"50eea5aa78cdeb6c72dd22f0aeabc407cc0f712e","modified":1683796935223},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1683796935223},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1683796935224},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"6697918a95d227f6ca81289417067aad3f4dd0a4","modified":1684215629923},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"96df62e34661d8ca4a45267286127479e5178a79","modified":1683796935239},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"c5c58714fb3cb839653e5c32e6094784c8662935","modified":1683796935249},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"5f96a28a4eac046b68ccc10e8c24ab01525e3245","modified":1683796935251},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"4f41fc46410e1e3018ff87e1d1a5c28be7258119","modified":1683796935252},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1683796935320},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"7864ba45716c51aef8d8b04fd4bc212e0008ce3b","modified":1683796935321},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1683796935323},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"95479790234c291b064d031577d71214cdd1d820","modified":1683796935322},{"_id":"themes/butterfly/scripts/events/init.js","hash":"72605a00bf623b6cbc9fa0f90069ea2ae584c5c0","modified":1683796935323},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1683796935324},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1683796935325},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"a3323fcb11cfd3f3e21230737341beb5d76b40aa","modified":1683796935326},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1683796935327},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1683796935328},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"8ff03b35385f9162e1eb54dceb5fa7f781306caf","modified":1683796935328},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"7222102f9919f8e961d4f1688425845fb7775ada","modified":1683796935329},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"6005907245dd74b153f03afdccfae1abb66bb482","modified":1683796935330},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"76343ac8422c9c8539082e77eda6ffee4b877eb2","modified":1683796935331},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1683796935332},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1683796935333},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"b8d95ac1851c37f1dce4b1dd4a1d3ffdff501a03","modified":1683796935334},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1683796935335},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1683796935335},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1683796935336},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1683796935337},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"56a5d41487d74654b75305c5325167a116495900","modified":1683796935337},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"fc5a80707cf522378be3cf8638ef78bccc88c510","modified":1683796935338},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1683796935339},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1683796935339},{"_id":"themes/butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1683796935382},{"_id":"themes/butterfly/source/css/var.styl","hash":"e1e37a2e932163886789b72624c7348545003f1d","modified":1683796935383},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1683796935384},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1683796935385},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1683796935387},{"_id":"themes/butterfly/source/js/main.js","hash":"90ec69ce7a52107bb3f42516187b40d344a8becb","modified":1683796935388},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"a102a6cacf7b20183946a54580867a964f3674c4","modified":1683796935391},{"_id":"themes/butterfly/source/js/utils.js","hash":"7060321e092179a159acfa57cc7ce70691f49e33","modified":1683796935392},{"_id":"themes/butterfly/source/live2d-widget/.gitignore","hash":"c1ab1464f9ac7ebdb1902860b987a68ba0765c65","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/LICENSE","hash":"31a3d460bb3c7d98845187c716a30db81c44b615","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/README.md","hash":"d267e7d02cee769153c2a8f5cd6c4812e41e64d4","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/autoload.js","hash":"f536c60b1fdee9d03c36f5a6502656cbbb8edf57","modified":1684215594467},{"_id":"themes/butterfly/source/live2d-widget/package.json","hash":"02c2acc648ec88aa81c9262a33847aba50e87d6b","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/rollup.config.js","hash":"3489dc2bf3ce120c86c1551fdd674a3a8c2881a6","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/waifu-tips.js","hash":"9c9f24114e4e2e27bf0658ba01f5702d158dc658","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/waifu-tips.json","hash":"ac969016a67c962336aabba5641681bb350f5785","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/waifu.css","hash":"20500dafb16ecb0c18e760aaadac07b023baa15a","modified":1672596187000},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"c8dbdfe6145a0bc6f7691c9551be8169a2698f0a","modified":1683796935226},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c7666a10448edd93f5ace37296051b7670495f1b","modified":1683796935227},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"f5207840c96df6b26ad227433babca4f8c362624","modified":1683796935228},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1683796935229},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1683796935229},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1683796935230},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fd55f0e09827ef40c53c48d184a553464aac3e03","modified":1683796935231},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1683796935232},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1683796935232},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"e9f952f1b66a0116fccb812b14db0f229666e586","modified":1683796935234},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1683796935235},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"962ee70a35e60a13c31eea47d16b9f98069fe417","modified":1683796935236},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"50b4b9c7f6a4771910be4198639cfcfc6d7b8925","modified":1683796935237},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"7a641b5dd45b970e1dafd1433eb32ea149e55cf2","modified":1683796935238},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"f530f8c2b0a7d048cdb8933b0fbe5380843006ff","modified":1683796935240},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"00ae419f527d8225a2dc03d4f977cec737248423","modified":1683796935241},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"a6fde4835d6460ce7baf792fd5e1977fad73db25","modified":1683796935242},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"9155f01d4c644a2e19b2b13b2d3c6d5e34dd0abf","modified":1683796935243},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"39c205027296dbd9fc9eb3cfd9d033bc5bd031b7","modified":1683796935244},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1683796935246},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"a60d9cc9083142e3d92b618561abd557fcab502b","modified":1683796935247},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"12be059c536490af216a397e8f2a7abbf6d4610e","modified":1683796935248},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1683796935247},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"cc1f7ae8a7ce5445277215821092e712ec8cc296","modified":1683796935250},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1683796935251},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1683796935255},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4e37535c63149708ecbedb262336014524ad8723","modified":1683796935280},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1683796935291},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"558456d85100606c14e0a59801b0ee2ee67aadd9","modified":1683796935292},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1683796935292},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"0211485f2387b2b63673d247a46109e208f353ca","modified":1683796935302},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1683796935303},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1683796935304},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1683796935305},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"08641633d38903351a7424baf9893d9038ba057d","modified":1683796935306},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1683796935307},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1683796935308},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"c02b1779bd0ebca6749f195be096b6ca574bfa29","modified":1683796935308},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1683796935309},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1683796935310},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"842b772a387b576550fa127030e1c2e9bf65716d","modified":1683796935310},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1683796935311},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"12185713f9ca08984fc74e3b69d8cd6828d23da8","modified":1683796935312},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"ba94ceb40d7c81372a76103d958dcc2cc6a84f00","modified":1683796935313},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"6a7a926b72c5083aa14051a0eca8d49e1c6261f1","modified":1683796935341},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"0e2f1d131ed0e9d8422057bd68f22344f9d68817","modified":1683796935342},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"e43017dbc73e0ce95dcfcb9dfb4fcce0c1715dd4","modified":1683796935343},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1683796935349},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1683796935365},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"5dd1ba997741d02894ff846eda939ad8051c0bb2","modified":1683796935366},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1683796935367},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1683796935369},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"bfa8bdd6b014018551ce0b83e962f61b3b25e2a5","modified":1683796935368},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"d83389e07f8851f1b9afafe0eacd1bf10ad334ef","modified":1683796935369},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1683796935370},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"3969f599e8657adf8c3ce287d83f5d0a23f276a9","modified":1683796935351},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"792a04d36de32f230ca3256ad87a90fe8392f333","modified":1683796935352},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1683796935352},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"077ce6932261cf51696834a25d1d988fec6cd7d0","modified":1683796935353},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"d33f2d9001a82d9a72d6f4088743762fbd016e4c","modified":1683796935354},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1683796935355},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1683796935355},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"92fd3128edc339ce570c2b1b134b9fc99e830789","modified":1683796935356},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1683796935357},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1683796935358},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"824b2b2d2ee72583b9e009c0bb13e29e806534cc","modified":1683796935358},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7e9b65dcae7ac54e0183bc841fea0f4bd4d78e5c","modified":1683796935359},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"d13bda30a5db542f7ff24c7938659c3869758c64","modified":1683796935360},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"01ba993e7bd384827c0f5499ae0c5f82e068d844","modified":1683796935362},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"d072872714854cdc3d2975fb131ac31cb82b13e3","modified":1683796935363},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"37db99299af380e9111dce2a78a5049b301b13e0","modified":1683796935371},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"eda63ed2c2e461883090c0b154368e353be3b011","modified":1683796935372},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"cf90ea339fbb7f345212319627fcd68964024e40","modified":1683796935373},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1683796935374},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"7c463ba25b3b54f0f46dfd75971d792816e942a8","modified":1683796935375},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1683796935376},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1683796935376},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1683796935377},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1683796935378},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"331c89ecfb79fab68466944a43e9e3d0ff49c646","modified":1683796935379},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1683796935379},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1683796935380},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"d40a7bed49299396be1d3d5d4f329535a6afa3ee","modified":1685591719333},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"bbe930d8425bdaee2a5ba3cade42b617cee42934","modified":1683796935390},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"40e76d6da538cb3c1ef6b79ffc0adfa64fe6b8ba","modified":1683796935391},{"_id":"themes/butterfly/source/live2d-widget/assets/screenshot-1.png","hash":"4bd4d97a1fcaa5deb3cea1c0a102a895a15af32f","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/demo/demo.html","hash":"128c05b681c9579b84d91a1d15d925904ef92814","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/demo/login.html","hash":"5df56deaeea62f81ea7f41343d91232229b87f21","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/src/index.js","hash":"a2670fe54cba051e0ad47048603c7630e5b613b4","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/src/model.js","hash":"a7742f3940bd157582c968f85feba299a1d3a783","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/src/message.js","hash":"595e2090df09ef1e50916b6d4b12a8fe30377b27","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/src/tools.js","hash":"d3fd7073b6352c9be4227a386ca84d910f83d4e9","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/src/utils.js","hash":"cf0bf51117a9044dc26373854caa8b622f043d78","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/src/waifu-tips.js","hash":"7887603444c52f54875541a111b9a6632bac970a","modified":1672596187000},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"58f37823f6cd9a194fb50f7ca7c2233e49939034","modified":1683796935255},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"0010c7a10d265c4329f0fd4db85b4a9ea7ba06b5","modified":1683796935254},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"a4bfe1ddca977fa991c49c36c1cffcf1b6c8bb9e","modified":1683796935257},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1683796935258},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"4b98145d6584d586cabf033493282afc72ae816a","modified":1683796935259},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1683796935260},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1683796935261},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"7e233f872aea6fd6beccdc9efd86b1bf9ec9f12d","modified":1683796935261},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"cd4fc9c5a61608a5dedf645c1295430a1623040f","modified":1683796935262},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"3f59333064c4fc754c638f13a417b7be2569ca09","modified":1683796935263},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1683796935264},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1683796935265},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1683796935266},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"1157118db9f5d7c0c5a0fc7c346f6e934ca00d52","modified":1683796935266},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1683796935268},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"306b7aa7d86e46df28fa52f75cead4f9d71cacb2","modified":1683796935267},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"e96d7ea4537ba9a4e07a922a4b50fbc527691bf6","modified":1683796935269},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"f8b73bc63ec1b45d86aa3891d8c81ef4d5980943","modified":1683796935270},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"b19b123df682b23491b17dcca386d79062cd8f6e","modified":1683796935271},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"1a20b11fa0e6b1943e9b4d81e197a25ca36af66d","modified":1683796935272},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"a56edeb1ce2f1b1fb0e866a30543f274b9f7d69e","modified":1683796935273},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"7c7fbe27d82becc9ee509765f1195c69f5864a0b","modified":1683796935274},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"5b44b4e5f2445260811de81edd3eeeb97d8bb583","modified":1683796935274},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1683796935275},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1683796935276},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f618457d62ef35d78a31e7fb1e375a462f64b228","modified":1683796935276},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"386a2b371644c2682560733617561ba6e6bf9ab2","modified":1683796935278},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"4bb4cf58e219dfb8787273c931b1ea978b2ab88f","modified":1683796935277},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"cba55cbbd0962bf84b8956195e686b0e158ed247","modified":1683796935278},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"bf6b1453096dd7f53d81cde078c233d301e14304","modified":1683796935279},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1683796935281},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f0d3eddd2bed68e5517274b3530bfe0fa5057d8e","modified":1683796935282},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"fad70676346f194f166ac4e714ac6ff37cbf50ea","modified":1683796935282},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"16d896d65986367498d3bf995ea0db5895d28297","modified":1683796935283},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"fbd17da1303d79fd96b236d50923cc4611222b36","modified":1683796935284},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"a6be932d1f64c6190f5d03b5b77fba09fa0fd6b8","modified":1683796935285},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"4f8bd22c5c32d5430cbe08ab4e861b6f8b86f820","modified":1683796935286},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1683796935287},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"4fb998a05e51ef2302775945883307ee3039a544","modified":1683796935288},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"edd4ebf76a79fb74cfae03a286fab90f74324dbd","modified":1683796935289},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"ce4ab79c85df9f77395269eb01e9a023d7f96376","modified":1683796935290},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"2043d8faef05a256a528747e3f37a74497a8019e","modified":1683796935290},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"90338ac4cd114d324fe1caaaeea8be9ca05d6a46","modified":1683796935294},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"ba04174d977da988a1d49c06641262c413352346","modified":1683796935295},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"3adcf28a8d205ea3ee19828eda0e668702fac07a","modified":1683796935296},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"4b9c35375e0eb9cf99ad246d5ca838eca64a635d","modified":1683796935297},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1683796935298},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1683796935300},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1683796935299},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"8106bd031586f075a994956ee4438eb13be25d7b","modified":1683796935301},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1683796935345},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1683796935345},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1683796935347},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1683796935347},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1683796935348},{"_id":"themes/butterfly/source/live2d-widget/live2d.min.js","hash":"94383fb61de815c3f806ae3f11026bbcfe384082","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/assets/screenshot-3.png","hash":"f89c6fdf44008e7d3c7a1aafe65dc39b212edb6c","modified":1672596187000},{"_id":"themes/butterfly/source/live2d-widget/assets/screenshot-2.png","hash":"76b844653136184c573b3632e12296e008a7ff5c","modified":1672596187000},{"_id":"themes/butterfly/source/img/xiaogong.png","hash":"a28efa5870d9ba944261461eeca5a8eb60432aee","modified":1684201265611},{"_id":"public/db.json","hash":"ce3406f6f40bf36db32eb93c4e79182c196d4ad7","modified":1688655991905},{"_id":"public/categories/index.html","hash":"94ba760b92c600d3d14e28d1c5b4927e702b02fe","modified":1688655991905},{"_id":"public/tags/index.html","hash":"499434042e5a17f0a0404f1c26b1304e0a4c3b80","modified":1688655991905},{"_id":"public/2023/07/01/以热爱为前提写代码-读码农翻身有感/index.html","hash":"147c8c2b3f8d1403b6170b13a97f1b8ef0517941","modified":1688655991905},{"_id":"public/2023/06/27/一行代码关闭windows端口服务/index.html","hash":"14bc229326c153c4deed9dfb85fca166d5a26275","modified":1688655991905},{"_id":"public/2023/06/27/一行代码判断字符串是否为某格式的时间/index.html","hash":"0a128b34f0e6ca6922c722b5022a5f143f1ea582","modified":1688655991905},{"_id":"public/2023/06/01/跨域问题后端配置，粘贴即用！/index.html","hash":"19387ed348f1951d54ae772f8cba43c720a341d5","modified":1688655991905},{"_id":"public/2023/06/01/Mybatis-plus中，在新增或修改时，自动插入或修改某个字段值/index.html","hash":"f2fe11555f632cc482a2513c3c5043254f157138","modified":1688655991905},{"_id":"public/2023/05/12/网站介绍/index.html","hash":"9e0a639afd49679e5b5ad5113bff2bebf3a7d77f","modified":1688655991905},{"_id":"public/index.html","hash":"ffadeeafdf84836c8ea4030e9f6ec10850bc9781","modified":1688655991905},{"_id":"public/categories/从头创建一个新项目可能需要的配置/index.html","hash":"bb9a5d777492bbd672fe489764e1c784305db232","modified":1688655991905},{"_id":"public/categories/一键系列/index.html","hash":"328a1da1fcf363c48297f2b4fd1880c026158678","modified":1688655991905},{"_id":"public/categories/记录/index.html","hash":"a2e51fbf56644e1dd8af8982fe91cffa7ddbf9cd","modified":1688655991905},{"_id":"public/archives/index.html","hash":"b54c5a1712d999e99364cb9b2f1b8a1da31a6006","modified":1688655991905},{"_id":"public/archives/2023/index.html","hash":"41c8c1de500860c31383e80a3365799cb2c7104c","modified":1688655991905},{"_id":"public/archives/2023/05/index.html","hash":"e1056f2bf0dd2a008405e6b84482ca4efb4b1b6f","modified":1688655991905},{"_id":"public/archives/2023/06/index.html","hash":"670b408ae7465e77a3c87ca2fd0fa32a9fbd0083","modified":1688655991905},{"_id":"public/archives/2023/07/index.html","hash":"49444364e04b0377bbd43070c6fcade80209c521","modified":1688655991905},{"_id":"public/tags/springboot/index.html","hash":"14db5e01013048f9e72602254f008380c3b4508b","modified":1688655991905},{"_id":"public/tags/java/index.html","hash":"b7e952025d6051776d3ec28fc163caac9bd2e53a","modified":1688655991905},{"_id":"public/tags/mybatis-plus/index.html","hash":"4829a3476857121f384e1999658fea5bae59ba28","modified":1688655991905},{"_id":"public/tags/Windows/index.html","hash":"7ff534a5ba76a0ca0d9ea3613684fca4b3c7dbdb","modified":1688655991905},{"_id":"public/tags/端口/index.html","hash":"9a1f9d8b2b763826bf3f347520ef1f0d368b2ef2","modified":1688655991905},{"_id":"public/tags/date/index.html","hash":"eff0b1c52a91b5d539633feab70509a1bbac9342","modified":1688655991905},{"_id":"public/tags/hutool/index.html","hash":"6df31261e9c26b0ef70b2e2e436e9b02ecfab993","modified":1688655991905},{"_id":"public/tags/工具类/index.html","hash":"be8f799d6a23fca181625191e3dbbf04c4538466","modified":1688655991905},{"_id":"public/tags/博客/index.html","hash":"50142af91fcaeec6166f5850d1086518d75dc7bb","modified":1688655991905},{"_id":"public/tags/网站/index.html","hash":"bb393784cc0708b0428fcb50cea839fe8721e458","modified":1688655991905},{"_id":"public/tags/技术/index.html","hash":"867e8fd5ec4ef633c1c762d7f66e73b3e2b25437","modified":1688655991905},{"_id":"public/tags/学习/index.html","hash":"6195b57f4f52bfc0083dc227bb2220fc7f0ba2cc","modified":1688655991905},{"_id":"public/tags/感想/index.html","hash":"643c043953d5db3b3d645470ddf75f20bce55ac4","modified":1688655991905},{"_id":"public/tags/写作/index.html","hash":"79bf4af733e922d5e01e391b4bc21a06f92541f5","modified":1688655991905},{"_id":"public/tags/跨域/index.html","hash":"e2bd2c8c1fee194c1aa41aad5e5a377f55105801","modified":1688655991905},{"_id":"public/tags/配置类/index.html","hash":"9cba98b2fda3ed246cbc74c16e21272ee874d261","modified":1688655991905},{"_id":"public/CNAME","hash":"190968180bd9b1b6f01c11ebf9d9c6e321edef62","modified":1688655991905},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1688655991905},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1688655991905},{"_id":"public/live2d-widget/LICENSE","hash":"31a3d460bb3c7d98845187c716a30db81c44b615","modified":1688655991905},{"_id":"public/live2d-widget/assets/screenshot-1.png","hash":"4bd4d97a1fcaa5deb3cea1c0a102a895a15af32f","modified":1688655991905},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1688655991905},{"_id":"public/css/index.css","hash":"000b43c26001819d3430014f811d63f32e077b0f","modified":1688655991905},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1688655991905},{"_id":"public/js/utils.js","hash":"7bec147ae2b313fbd0331d87018f99715368fc4b","modified":1688655991905},{"_id":"public/live2d-widget/README.html","hash":"0596117accdda54dd039ed991079f02498fbdaa0","modified":1688655991905},{"_id":"public/live2d-widget/autoload.js","hash":"f536c60b1fdee9d03c36f5a6502656cbbb8edf57","modified":1688655991905},{"_id":"public/live2d-widget/package.json","hash":"80d2120042316b755e164d674cc036ed4a59491e","modified":1688655991905},{"_id":"public/live2d-widget/rollup.config.js","hash":"3489dc2bf3ce120c86c1551fdd674a3a8c2881a6","modified":1688655991905},{"_id":"public/live2d-widget/waifu-tips.js","hash":"9c9f24114e4e2e27bf0658ba01f5702d158dc658","modified":1688655991905},{"_id":"public/live2d-widget/waifu-tips.json","hash":"ea3ef8dc2f8be9b5734a9b03a4242dca9c81fce8","modified":1688655991905},{"_id":"public/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1688655991905},{"_id":"public/live2d-widget/waifu.css","hash":"20500dafb16ecb0c18e760aaadac07b023baa15a","modified":1688655991905},{"_id":"public/js/search/local-search.js","hash":"8509cbd954ee9e099dcfbbfdafba70893a56e9ae","modified":1688655991905},{"_id":"public/live2d-widget/demo/demo.html","hash":"128c05b681c9579b84d91a1d15d925904ef92814","modified":1688655991905},{"_id":"public/live2d-widget/demo/login.html","hash":"5df56deaeea62f81ea7f41343d91232229b87f21","modified":1688655991905},{"_id":"public/live2d-widget/src/model.js","hash":"a7742f3940bd157582c968f85feba299a1d3a783","modified":1688655991905},{"_id":"public/live2d-widget/src/tools.js","hash":"d3fd7073b6352c9be4227a386ca84d910f83d4e9","modified":1688655991905},{"_id":"public/live2d-widget/src/message.js","hash":"595e2090df09ef1e50916b6d4b12a8fe30377b27","modified":1688655991905},{"_id":"public/live2d-widget/src/index.js","hash":"a2670fe54cba051e0ad47048603c7630e5b613b4","modified":1688655991905},{"_id":"public/live2d-widget/src/utils.js","hash":"cf0bf51117a9044dc26373854caa8b622f043d78","modified":1688655991905},{"_id":"public/live2d-widget/src/waifu-tips.js","hash":"7887603444c52f54875541a111b9a6632bac970a","modified":1688655991905},{"_id":"public/js/tw_cn.js","hash":"42b106354d72a0ea1fe62587b313a5b7de3cc393","modified":1688655991905},{"_id":"public/js/main.js","hash":"dca55899b7c92ebee6191bef127ea5e2283ecc63","modified":1688655991905},{"_id":"public/live2d-widget/assets/screenshot-3.png","hash":"f89c6fdf44008e7d3c7a1aafe65dc39b212edb6c","modified":1688655991905},{"_id":"public/live2d-widget/assets/screenshot-2.png","hash":"76b844653136184c573b3632e12296e008a7ff5c","modified":1688655991905},{"_id":"public/live2d-widget/live2d.min.js","hash":"94383fb61de815c3f806ae3f11026bbcfe384082","modified":1688655991905},{"_id":"public/img/xiaogong.png","hash":"a28efa5870d9ba944261461eeca5a8eb60432aee","modified":1688655991905}],"Category":[{"name":"从头创建一个新项目可能需要的配置","_id":"cljra6f850004ug0gf1xv8ubn"},{"name":"一键系列","_id":"cljra6f8e0009ug0gfuzj4ntm"},{"name":"记录","_id":"cljra6f8j000eug0g5t3358ib"}],"Data":[],"Page":[{"title":"分类","date":"2023-05-11T13:52:23.000Z","type":"categories","_content":"\n","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2023-05-11 21:52:23\ntype: \"categories\"\n---\n\n","updated":"2023-05-11T14:02:05.495Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cljra6f7r0000ug0g7ywy05dz","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""},{"title":"标签","date":"2023-05-11T13:50:59.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2023-05-11 21:50:59\ntype: \"tags\"\n---\n","updated":"2023-05-11T14:02:20.319Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cljra6f810002ug0ggb442srs","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""}],"Post":[{"title":"Mybatis-plus中，在新增或修改时，自动插入或修改某个字段值","date":"2023-06-01T01:46:01.000Z","author":"ice","_content":"\n\n\n# 一 效果\n\n在新增User表的数据时，createTime为null\n\n![image-20230531133204052](https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/b937d4d9b00ab747b9224b0d665d5dc0.png)\n\n使用mybatis-plus自带的save方法新增后，在数据库中有自动插入的当前时间的值\n\n![image-20230531133418819](https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/b38d9729833e7ebbfc80ab60f5393a6a.png)\n\n# 二 实现原理\n\n> ##  MetaObjectHandler:元数据对象处理器\n\n说明:`MetaObjectHandler接口`是mybatisPlus为我们提供的的一个扩展接口，我们可以利用这个接口在我们`插入`或者`更新`数据的时候，`为一些字段指定默认值`。\n\n> 使用场景：公共字段填充，如updateTime、createTime、createUser、updateUser等公共字段的填充。\n\n# 三 使用步骤\n\n## 1 在实体类的公共字段上添加@TableField注解\n\n1. `@TableField(fill = FieldFill.INSERT)`：表示此字段只在插入/新增操作时更新数据；\n2. `@TableField(fill = FieldFill.INSERT_UPDATE)`：表示此字段在新增和修改操作时都更新数据；\n3. `@TableField(fill = FieldFill.UPDATE)`：表示此字段只在修改操作时更新数据；\n\n如下面代码中，createTime，updateTime，createUser都会在新增时更新数据，updateTime还会在修改时更新数据\n\n```java\n@TableName(value = \"article\")\n@Data\npublic class Article implements Serializable {\n    /**\n     * id\n     */\n    @TableId(type = IdType.ASSIGN_UUID)\n    private String id;\n    /**\n     * 图片地址\n     */\n    private String pictureUrl;\n    /**\n     * 标题\n     */\n    private String title;\n    /**\n     * 创建时间\n     */\n    @TableField(fill = FieldFill.INSERT)\n    private String createTime;\n    /**\n     * 修改时间\n     */\n    @TableField(fill = FieldFill.INSERT_UPDATE)\n    private String updateTime;\n\n    /**\n     * 创建人\n     */\n    @TableField(fill = FieldFill.INSERT)\n    private String createUser;\n\n    @TableField(exist = false)\n    private static final long serialVersionUID = 1L;\n}\n```\n\n## 2 创建配置类实现`MetaObjectHandler`接口\n\n实现`MetaObjectHandler`接口，重写insertFill、updateFill方法\n\n使用接口中的setFieldValByName方法，找到我们之前的几个字段，并给字段赋值\n\n> 不要忘记@Component 注解\n\n如下代码：\n\n```java\n@Component\npublic class MyMetaObjectHandler implements MetaObjectHandler {\n    @Override\n    public void insertFill(MetaObject metaObject) {\n        this.setFieldValByName(\"createTime\", new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(new Date()), metaObject);\n        this.setFieldValByName(\"updateTime\", new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(new Date()), metaObject);    \n        this.setFieldValByName(\"createUser\", currrentUser.getNickname(), metaObject);\n    }\n\n    @Override\n    public void updateFill(MetaObject metaObject) {\n        this.setFieldValByName(\"updateTime\", new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(new Date()), metaObject);\n\n    }\n}\n```\n\n\n\n","source":"_posts/Mybatis-plus中，在新增或修改时，自动插入或修改某个字段值.md","raw":"---\ntitle: Mybatis-plus中，在新增或修改时，自动插入或修改某个字段值\ndate: 2023-06-01 09:46:01\nauthor: ice\ntags:\n- springboot\n- java\n- mybatis-plus\ncategories:\n- 从头创建一个新项目可能需要的配置\n---\n\n\n\n# 一 效果\n\n在新增User表的数据时，createTime为null\n\n![image-20230531133204052](https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/b937d4d9b00ab747b9224b0d665d5dc0.png)\n\n使用mybatis-plus自带的save方法新增后，在数据库中有自动插入的当前时间的值\n\n![image-20230531133418819](https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/b38d9729833e7ebbfc80ab60f5393a6a.png)\n\n# 二 实现原理\n\n> ##  MetaObjectHandler:元数据对象处理器\n\n说明:`MetaObjectHandler接口`是mybatisPlus为我们提供的的一个扩展接口，我们可以利用这个接口在我们`插入`或者`更新`数据的时候，`为一些字段指定默认值`。\n\n> 使用场景：公共字段填充，如updateTime、createTime、createUser、updateUser等公共字段的填充。\n\n# 三 使用步骤\n\n## 1 在实体类的公共字段上添加@TableField注解\n\n1. `@TableField(fill = FieldFill.INSERT)`：表示此字段只在插入/新增操作时更新数据；\n2. `@TableField(fill = FieldFill.INSERT_UPDATE)`：表示此字段在新增和修改操作时都更新数据；\n3. `@TableField(fill = FieldFill.UPDATE)`：表示此字段只在修改操作时更新数据；\n\n如下面代码中，createTime，updateTime，createUser都会在新增时更新数据，updateTime还会在修改时更新数据\n\n```java\n@TableName(value = \"article\")\n@Data\npublic class Article implements Serializable {\n    /**\n     * id\n     */\n    @TableId(type = IdType.ASSIGN_UUID)\n    private String id;\n    /**\n     * 图片地址\n     */\n    private String pictureUrl;\n    /**\n     * 标题\n     */\n    private String title;\n    /**\n     * 创建时间\n     */\n    @TableField(fill = FieldFill.INSERT)\n    private String createTime;\n    /**\n     * 修改时间\n     */\n    @TableField(fill = FieldFill.INSERT_UPDATE)\n    private String updateTime;\n\n    /**\n     * 创建人\n     */\n    @TableField(fill = FieldFill.INSERT)\n    private String createUser;\n\n    @TableField(exist = false)\n    private static final long serialVersionUID = 1L;\n}\n```\n\n## 2 创建配置类实现`MetaObjectHandler`接口\n\n实现`MetaObjectHandler`接口，重写insertFill、updateFill方法\n\n使用接口中的setFieldValByName方法，找到我们之前的几个字段，并给字段赋值\n\n> 不要忘记@Component 注解\n\n如下代码：\n\n```java\n@Component\npublic class MyMetaObjectHandler implements MetaObjectHandler {\n    @Override\n    public void insertFill(MetaObject metaObject) {\n        this.setFieldValByName(\"createTime\", new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(new Date()), metaObject);\n        this.setFieldValByName(\"updateTime\", new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(new Date()), metaObject);    \n        this.setFieldValByName(\"createUser\", currrentUser.getNickname(), metaObject);\n    }\n\n    @Override\n    public void updateFill(MetaObject metaObject) {\n        this.setFieldValByName(\"updateTime\", new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(new Date()), metaObject);\n\n    }\n}\n```\n\n\n\n","slug":"Mybatis-plus中，在新增或修改时，自动插入或修改某个字段值","published":1,"updated":"2023-07-06T14:56:52.921Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljra6f7v0001ug0g8zbffmqk","content":"<h1 id=\"一-效果\"><a href=\"#一-效果\" class=\"headerlink\" title=\"一 效果\"></a>一 效果</h1><p>在新增User表的数据时，createTime为null</p>\n<p><img src=\"https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/b937d4d9b00ab747b9224b0d665d5dc0.png\" alt=\"image-20230531133204052\"></p>\n<p>使用mybatis-plus自带的save方法新增后，在数据库中有自动插入的当前时间的值</p>\n<p><img src=\"https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/b38d9729833e7ebbfc80ab60f5393a6a.png\" alt=\"image-20230531133418819\"></p>\n<h1 id=\"二-实现原理\"><a href=\"#二-实现原理\" class=\"headerlink\" title=\"二 实现原理\"></a>二 实现原理</h1><blockquote>\n<h2 id=\"MetaObjectHandler-元数据对象处理器\"><a href=\"#MetaObjectHandler-元数据对象处理器\" class=\"headerlink\" title=\"MetaObjectHandler:元数据对象处理器\"></a>MetaObjectHandler:元数据对象处理器</h2></blockquote>\n<p>说明:<code>MetaObjectHandler接口</code>是mybatisPlus为我们提供的的一个扩展接口，我们可以利用这个接口在我们<code>插入</code>或者<code>更新</code>数据的时候，<code>为一些字段指定默认值</code>。</p>\n<blockquote>\n<p>使用场景：公共字段填充，如updateTime、createTime、createUser、updateUser等公共字段的填充。</p>\n</blockquote>\n<h1 id=\"三-使用步骤\"><a href=\"#三-使用步骤\" class=\"headerlink\" title=\"三 使用步骤\"></a>三 使用步骤</h1><h2 id=\"1-在实体类的公共字段上添加-TableField注解\"><a href=\"#1-在实体类的公共字段上添加-TableField注解\" class=\"headerlink\" title=\"1 在实体类的公共字段上添加@TableField注解\"></a>1 在实体类的公共字段上添加@TableField注解</h2><ol>\n<li><code>@TableField(fill = FieldFill.INSERT)</code>：表示此字段只在插入&#x2F;新增操作时更新数据；</li>\n<li><code>@TableField(fill = FieldFill.INSERT_UPDATE)</code>：表示此字段在新增和修改操作时都更新数据；</li>\n<li><code>@TableField(fill = FieldFill.UPDATE)</code>：表示此字段只在修改操作时更新数据；</li>\n</ol>\n<p>如下面代码中，createTime，updateTime，createUser都会在新增时更新数据，updateTime还会在修改时更新数据</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@TableName(value = &quot;article&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Article</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableId(type = IdType.ASSIGN_UUID)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 图片地址</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String pictureUrl;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 标题</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String title;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 创建时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(fill = FieldFill.INSERT)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String createTime;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 修改时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String updateTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 创建人</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(fill = FieldFill.INSERT)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String createUser;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TableField(exist = false)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-创建配置类实现MetaObjectHandler接口\"><a href=\"#2-创建配置类实现MetaObjectHandler接口\" class=\"headerlink\" title=\"2 创建配置类实现MetaObjectHandler接口\"></a>2 创建配置类实现<code>MetaObjectHandler</code>接口</h2><p>实现<code>MetaObjectHandler</code>接口，重写insertFill、updateFill方法</p>\n<p>使用接口中的setFieldValByName方法，找到我们之前的几个字段，并给字段赋值</p>\n<blockquote>\n<p>不要忘记@Component 注解</p>\n</blockquote>\n<p>如下代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyMetaObjectHandler</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">MetaObjectHandler</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">insertFill</span><span class=\"params\">(MetaObject metaObject)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setFieldValByName(<span class=\"string\">&quot;createTime&quot;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()), metaObject);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setFieldValByName(<span class=\"string\">&quot;updateTime&quot;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()), metaObject);    </span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setFieldValByName(<span class=\"string\">&quot;createUser&quot;</span>, currrentUser.getNickname(), metaObject);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">updateFill</span><span class=\"params\">(MetaObject metaObject)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setFieldValByName(<span class=\"string\">&quot;updateTime&quot;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()), metaObject);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"一-效果\"><a href=\"#一-效果\" class=\"headerlink\" title=\"一 效果\"></a>一 效果</h1><p>在新增User表的数据时，createTime为null</p>\n<p><img src=\"https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/b937d4d9b00ab747b9224b0d665d5dc0.png\" alt=\"image-20230531133204052\"></p>\n<p>使用mybatis-plus自带的save方法新增后，在数据库中有自动插入的当前时间的值</p>\n<p><img src=\"https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/b38d9729833e7ebbfc80ab60f5393a6a.png\" alt=\"image-20230531133418819\"></p>\n<h1 id=\"二-实现原理\"><a href=\"#二-实现原理\" class=\"headerlink\" title=\"二 实现原理\"></a>二 实现原理</h1><blockquote>\n<h2 id=\"MetaObjectHandler-元数据对象处理器\"><a href=\"#MetaObjectHandler-元数据对象处理器\" class=\"headerlink\" title=\"MetaObjectHandler:元数据对象处理器\"></a>MetaObjectHandler:元数据对象处理器</h2></blockquote>\n<p>说明:<code>MetaObjectHandler接口</code>是mybatisPlus为我们提供的的一个扩展接口，我们可以利用这个接口在我们<code>插入</code>或者<code>更新</code>数据的时候，<code>为一些字段指定默认值</code>。</p>\n<blockquote>\n<p>使用场景：公共字段填充，如updateTime、createTime、createUser、updateUser等公共字段的填充。</p>\n</blockquote>\n<h1 id=\"三-使用步骤\"><a href=\"#三-使用步骤\" class=\"headerlink\" title=\"三 使用步骤\"></a>三 使用步骤</h1><h2 id=\"1-在实体类的公共字段上添加-TableField注解\"><a href=\"#1-在实体类的公共字段上添加-TableField注解\" class=\"headerlink\" title=\"1 在实体类的公共字段上添加@TableField注解\"></a>1 在实体类的公共字段上添加@TableField注解</h2><ol>\n<li><code>@TableField(fill = FieldFill.INSERT)</code>：表示此字段只在插入&#x2F;新增操作时更新数据；</li>\n<li><code>@TableField(fill = FieldFill.INSERT_UPDATE)</code>：表示此字段在新增和修改操作时都更新数据；</li>\n<li><code>@TableField(fill = FieldFill.UPDATE)</code>：表示此字段只在修改操作时更新数据；</li>\n</ol>\n<p>如下面代码中，createTime，updateTime，createUser都会在新增时更新数据，updateTime还会在修改时更新数据</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@TableName(value = &quot;article&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Article</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableId(type = IdType.ASSIGN_UUID)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 图片地址</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String pictureUrl;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 标题</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String title;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 创建时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(fill = FieldFill.INSERT)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String createTime;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 修改时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String updateTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 创建人</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(fill = FieldFill.INSERT)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String createUser;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TableField(exist = false)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-创建配置类实现MetaObjectHandler接口\"><a href=\"#2-创建配置类实现MetaObjectHandler接口\" class=\"headerlink\" title=\"2 创建配置类实现MetaObjectHandler接口\"></a>2 创建配置类实现<code>MetaObjectHandler</code>接口</h2><p>实现<code>MetaObjectHandler</code>接口，重写insertFill、updateFill方法</p>\n<p>使用接口中的setFieldValByName方法，找到我们之前的几个字段，并给字段赋值</p>\n<blockquote>\n<p>不要忘记@Component 注解</p>\n</blockquote>\n<p>如下代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyMetaObjectHandler</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">MetaObjectHandler</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">insertFill</span><span class=\"params\">(MetaObject metaObject)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setFieldValByName(<span class=\"string\">&quot;createTime&quot;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()), metaObject);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setFieldValByName(<span class=\"string\">&quot;updateTime&quot;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()), metaObject);    </span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setFieldValByName(<span class=\"string\">&quot;createUser&quot;</span>, currrentUser.getNickname(), metaObject);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">updateFill</span><span class=\"params\">(MetaObject metaObject)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setFieldValByName(<span class=\"string\">&quot;updateTime&quot;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()), metaObject);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"一行代码关闭windows端口服务","date":"2023-06-27T02:41:00.000Z","author":"ice","_content":"\n### 1：一条代码\n\n```\nGet-Process -Id (Get-NetTCPConnection -LocalPort 10001).OwningProcess | Stop-Process -Force\n```\n\n注意：get-process命令需要打开Powershell终端才能运行\n\n![image-20230627104730737](https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627104730737.png)\n\n\n\n**解释：**\n\n- 这是一条 PowerShell 命令，用于根据本地端口号查找对应的进程并强制结束它。下面是该命令的详细解释：\n\n  - `Get-NetTCPConnection -LocalPort 10001`：使用 `Get-NetTCPConnection` 命令查找本地使用 10001 端口的 TCP 连接。该命令返回了与该端口相关联的网络连接（如果有）。`-LocalPort` 参数指定要查找的本地端口号。\n\n  - `(Get-NetTCPConnection -LocalPort 10001).OwningProcess`：从上一条命令的输出中取出 `OwningProcess` 属性的值，即与本地端口相关联的进程 ID。\n\n  - `Get-Process -Id`：使用 `Get-Process` 命令查找与指定的进程 ID 相关联的进程对象。\n\n  - `| Stop-Process -Force`：使用管道将输出传递给 `Stop-Process` 命令，强制结束指定的进程。`-Force` 参数表示强制结束进程，即使进程不响应也要结束。\n\n  因此，该命令的作用是：查找本地端口号为 10001 的 TCP 连接，并通过该连接的 OwningProcess 属性获取进程 ID，然后使用 `Get-Process` 命令获取该进程对象，并将其传递给 `Stop-Process` 命令来强制结束该进程。这可以在需要停止指定端口上的进程时很有用。\n\n因此，这个命令的意思是：使用 `netstat` 工具查找所有使用 10001 端口的连接，并将每个连接的进程 ID 作为参数传递给 `taskkill` 命令，以便强制结束该进程。可以用类似其他端口的情况使用，只需要替换 \"10001\" 为想要查找和终止进程的端口号即可。\n\n### 2：普通方法\n\n我要关闭10001端口的进程：\n\n```\nnetstat -ano|findstr \"10001\"\n```\n\n结果：\n\n![image-20230627104318114](https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627104318114.png)\n\n5928就是使用这个端口的进程编码，我们关闭这个端口：\n\n```\ntaskkill /f /pid 5928\n```\n\n搞定","source":"_posts/一行代码关闭windows端口服务.md","raw":"---\ntitle: 一行代码关闭windows端口服务\ndate: 2023-06-27 10:41:00\nauthor: ice\ntags:\n- Windows\n- 端口\ncategories:\n- 一键系列\n---\n\n### 1：一条代码\n\n```\nGet-Process -Id (Get-NetTCPConnection -LocalPort 10001).OwningProcess | Stop-Process -Force\n```\n\n注意：get-process命令需要打开Powershell终端才能运行\n\n![image-20230627104730737](https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627104730737.png)\n\n\n\n**解释：**\n\n- 这是一条 PowerShell 命令，用于根据本地端口号查找对应的进程并强制结束它。下面是该命令的详细解释：\n\n  - `Get-NetTCPConnection -LocalPort 10001`：使用 `Get-NetTCPConnection` 命令查找本地使用 10001 端口的 TCP 连接。该命令返回了与该端口相关联的网络连接（如果有）。`-LocalPort` 参数指定要查找的本地端口号。\n\n  - `(Get-NetTCPConnection -LocalPort 10001).OwningProcess`：从上一条命令的输出中取出 `OwningProcess` 属性的值，即与本地端口相关联的进程 ID。\n\n  - `Get-Process -Id`：使用 `Get-Process` 命令查找与指定的进程 ID 相关联的进程对象。\n\n  - `| Stop-Process -Force`：使用管道将输出传递给 `Stop-Process` 命令，强制结束指定的进程。`-Force` 参数表示强制结束进程，即使进程不响应也要结束。\n\n  因此，该命令的作用是：查找本地端口号为 10001 的 TCP 连接，并通过该连接的 OwningProcess 属性获取进程 ID，然后使用 `Get-Process` 命令获取该进程对象，并将其传递给 `Stop-Process` 命令来强制结束该进程。这可以在需要停止指定端口上的进程时很有用。\n\n因此，这个命令的意思是：使用 `netstat` 工具查找所有使用 10001 端口的连接，并将每个连接的进程 ID 作为参数传递给 `taskkill` 命令，以便强制结束该进程。可以用类似其他端口的情况使用，只需要替换 \"10001\" 为想要查找和终止进程的端口号即可。\n\n### 2：普通方法\n\n我要关闭10001端口的进程：\n\n```\nnetstat -ano|findstr \"10001\"\n```\n\n结果：\n\n![image-20230627104318114](https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627104318114.png)\n\n5928就是使用这个端口的进程编码，我们关闭这个端口：\n\n```\ntaskkill /f /pid 5928\n```\n\n搞定","slug":"一行代码关闭windows端口服务","published":1,"updated":"2023-07-06T14:57:05.317Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljra6f820003ug0g86cf53fr","content":"<h3 id=\"1：一条代码\"><a href=\"#1：一条代码\" class=\"headerlink\" title=\"1：一条代码\"></a>1：一条代码</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get-Process -Id (Get-NetTCPConnection -LocalPort 10001).OwningProcess | Stop-Process -Force</span><br></pre></td></tr></table></figure>\n\n<p>注意：get-process命令需要打开Powershell终端才能运行</p>\n<p><img src=\"https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627104730737.png\" alt=\"image-20230627104730737\"></p>\n<p><strong>解释：</strong></p>\n<ul>\n<li><p>这是一条 PowerShell 命令，用于根据本地端口号查找对应的进程并强制结束它。下面是该命令的详细解释：</p>\n<ul>\n<li><p><code>Get-NetTCPConnection -LocalPort 10001</code>：使用 <code>Get-NetTCPConnection</code> 命令查找本地使用 10001 端口的 TCP 连接。该命令返回了与该端口相关联的网络连接（如果有）。<code>-LocalPort</code> 参数指定要查找的本地端口号。</p>\n</li>\n<li><p><code>(Get-NetTCPConnection -LocalPort 10001).OwningProcess</code>：从上一条命令的输出中取出 <code>OwningProcess</code> 属性的值，即与本地端口相关联的进程 ID。</p>\n</li>\n<li><p><code>Get-Process -Id</code>：使用 <code>Get-Process</code> 命令查找与指定的进程 ID 相关联的进程对象。</p>\n</li>\n<li><p><code>| Stop-Process -Force</code>：使用管道将输出传递给 <code>Stop-Process</code> 命令，强制结束指定的进程。<code>-Force</code> 参数表示强制结束进程，即使进程不响应也要结束。</p>\n</li>\n</ul>\n<p>因此，该命令的作用是：查找本地端口号为 10001 的 TCP 连接，并通过该连接的 OwningProcess 属性获取进程 ID，然后使用 <code>Get-Process</code> 命令获取该进程对象，并将其传递给 <code>Stop-Process</code> 命令来强制结束该进程。这可以在需要停止指定端口上的进程时很有用。</p>\n</li>\n</ul>\n<p>因此，这个命令的意思是：使用 <code>netstat</code> 工具查找所有使用 10001 端口的连接，并将每个连接的进程 ID 作为参数传递给 <code>taskkill</code> 命令，以便强制结束该进程。可以用类似其他端口的情况使用，只需要替换 “10001” 为想要查找和终止进程的端口号即可。</p>\n<h3 id=\"2：普通方法\"><a href=\"#2：普通方法\" class=\"headerlink\" title=\"2：普通方法\"></a>2：普通方法</h3><p>我要关闭10001端口的进程：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -ano|findstr &quot;10001&quot;</span><br></pre></td></tr></table></figure>\n\n<p>结果：</p>\n<p><img src=\"https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627104318114.png\" alt=\"image-20230627104318114\"></p>\n<p>5928就是使用这个端口的进程编码，我们关闭这个端口：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">taskkill /f /pid 5928</span><br></pre></td></tr></table></figure>\n\n<p>搞定</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h3 id=\"1：一条代码\"><a href=\"#1：一条代码\" class=\"headerlink\" title=\"1：一条代码\"></a>1：一条代码</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get-Process -Id (Get-NetTCPConnection -LocalPort 10001).OwningProcess | Stop-Process -Force</span><br></pre></td></tr></table></figure>\n\n<p>注意：get-process命令需要打开Powershell终端才能运行</p>\n<p><img src=\"https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627104730737.png\" alt=\"image-20230627104730737\"></p>\n<p><strong>解释：</strong></p>\n<ul>\n<li><p>这是一条 PowerShell 命令，用于根据本地端口号查找对应的进程并强制结束它。下面是该命令的详细解释：</p>\n<ul>\n<li><p><code>Get-NetTCPConnection -LocalPort 10001</code>：使用 <code>Get-NetTCPConnection</code> 命令查找本地使用 10001 端口的 TCP 连接。该命令返回了与该端口相关联的网络连接（如果有）。<code>-LocalPort</code> 参数指定要查找的本地端口号。</p>\n</li>\n<li><p><code>(Get-NetTCPConnection -LocalPort 10001).OwningProcess</code>：从上一条命令的输出中取出 <code>OwningProcess</code> 属性的值，即与本地端口相关联的进程 ID。</p>\n</li>\n<li><p><code>Get-Process -Id</code>：使用 <code>Get-Process</code> 命令查找与指定的进程 ID 相关联的进程对象。</p>\n</li>\n<li><p><code>| Stop-Process -Force</code>：使用管道将输出传递给 <code>Stop-Process</code> 命令，强制结束指定的进程。<code>-Force</code> 参数表示强制结束进程，即使进程不响应也要结束。</p>\n</li>\n</ul>\n<p>因此，该命令的作用是：查找本地端口号为 10001 的 TCP 连接，并通过该连接的 OwningProcess 属性获取进程 ID，然后使用 <code>Get-Process</code> 命令获取该进程对象，并将其传递给 <code>Stop-Process</code> 命令来强制结束该进程。这可以在需要停止指定端口上的进程时很有用。</p>\n</li>\n</ul>\n<p>因此，这个命令的意思是：使用 <code>netstat</code> 工具查找所有使用 10001 端口的连接，并将每个连接的进程 ID 作为参数传递给 <code>taskkill</code> 命令，以便强制结束该进程。可以用类似其他端口的情况使用，只需要替换 “10001” 为想要查找和终止进程的端口号即可。</p>\n<h3 id=\"2：普通方法\"><a href=\"#2：普通方法\" class=\"headerlink\" title=\"2：普通方法\"></a>2：普通方法</h3><p>我要关闭10001端口的进程：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -ano|findstr &quot;10001&quot;</span><br></pre></td></tr></table></figure>\n\n<p>结果：</p>\n<p><img src=\"https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627104318114.png\" alt=\"image-20230627104318114\"></p>\n<p>5928就是使用这个端口的进程编码，我们关闭这个端口：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">taskkill /f /pid 5928</span><br></pre></td></tr></table></figure>\n\n<p>搞定</p>\n"},{"title":"一行代码判断字符串是否为某格式的时间","date":"2023-06-27T00:02:30.000Z","author":"ice","_content":"\n在开发中遇到需要判断某个字符串是否为某种格式（如`yyyyMMdd`、`yyyy-MM-dd`等）的时间的需求，没有找到已有的一键解决的api，所以自己写了一个\n\n方法本体：\n\n注：方法中的`ObjectUtil`和`DateUtil`均为hutool中的包\n\n```java\n    /**\n     * 判断字符串是否为指定格式的日期时间\n     *\n     * @param dateStr    需要检查的日期字符串\n     * @param dateFormat 指定的日期格式，例如：\"yyyyMMdd\", \"yyyy-MM-dd\", \"yyyy/MM/dd\" 等\n     * @return 如果字符串是指定格式的日期时间，返回 true;否则返回 false。\n     */\n\n    public static boolean isValidDateFormat(String dateStr, String dateFormat) {\n        if (ObjectUtil.isEmpty(dateStr)) {\n            return false;\n        }\n        try {\n            DateUtil.parse(dateStr, dateFormat); // 将字符串解析为日期对象，如果解析成功，则说明字符串是有效的日期格式；否则说明字符串不是有效的日期格式。\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n```\n\n\n\n测试：\n\n```java\n    /**\n     * 测试isValidDateFormat方法\n     * @param args\n     */\n    public static void main(String[] args) {\n\n        String dateStr = \"2021-03-44\"; // 需要检查的日期字符串\n        String dateFormat = \"yyyy-MM-dd\"; // 指定的日期格式\n        boolean isValidDate = isValidDateFormat(dateStr, dateFormat);\n        System.out.println(\"字符串 \" + dateStr + \" 是否为格式为 '\" + dateFormat + \"' 的时间：\" + isValidDate);\n    }\n```\n\n结果：\n\n```java\n字符串 2021-03-01 是否为格式为 'yyyy-MM-dd' 的时间：true\n字符串 2aaaa 是否为格式为 'yyyy-MM-dd' 的时间：false\n字符串 20230102 是否为格式为 'yyyyMMdd' 的时间：true\n```\n\n\n\n原理：\n\n定义了一个名为 `isValidDateFormat` 的方法，该方法接受两个参数：`dateStr`(需要检查的日期字符串)和 `dateFormat`(指定的日期格式)。方法内部使用 `DateUtil.parse()` 方法尝试将字符串解析为日期对象。如果解析成功且日期格式与指定的格式相符，则返回 `true`;否则返回 `false`。","source":"_posts/一行代码判断字符串是否为某格式的时间.md","raw":"---\ntitle: 一行代码判断字符串是否为某格式的时间\ndate: 2023-06-27 08:02:30\nauthor: ice\ntags:\n- date\n- hutool\n- java\n- 工具类\ncategories:\n- 一键系列\n---\n\n在开发中遇到需要判断某个字符串是否为某种格式（如`yyyyMMdd`、`yyyy-MM-dd`等）的时间的需求，没有找到已有的一键解决的api，所以自己写了一个\n\n方法本体：\n\n注：方法中的`ObjectUtil`和`DateUtil`均为hutool中的包\n\n```java\n    /**\n     * 判断字符串是否为指定格式的日期时间\n     *\n     * @param dateStr    需要检查的日期字符串\n     * @param dateFormat 指定的日期格式，例如：\"yyyyMMdd\", \"yyyy-MM-dd\", \"yyyy/MM/dd\" 等\n     * @return 如果字符串是指定格式的日期时间，返回 true;否则返回 false。\n     */\n\n    public static boolean isValidDateFormat(String dateStr, String dateFormat) {\n        if (ObjectUtil.isEmpty(dateStr)) {\n            return false;\n        }\n        try {\n            DateUtil.parse(dateStr, dateFormat); // 将字符串解析为日期对象，如果解析成功，则说明字符串是有效的日期格式；否则说明字符串不是有效的日期格式。\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n```\n\n\n\n测试：\n\n```java\n    /**\n     * 测试isValidDateFormat方法\n     * @param args\n     */\n    public static void main(String[] args) {\n\n        String dateStr = \"2021-03-44\"; // 需要检查的日期字符串\n        String dateFormat = \"yyyy-MM-dd\"; // 指定的日期格式\n        boolean isValidDate = isValidDateFormat(dateStr, dateFormat);\n        System.out.println(\"字符串 \" + dateStr + \" 是否为格式为 '\" + dateFormat + \"' 的时间：\" + isValidDate);\n    }\n```\n\n结果：\n\n```java\n字符串 2021-03-01 是否为格式为 'yyyy-MM-dd' 的时间：true\n字符串 2aaaa 是否为格式为 'yyyy-MM-dd' 的时间：false\n字符串 20230102 是否为格式为 'yyyyMMdd' 的时间：true\n```\n\n\n\n原理：\n\n定义了一个名为 `isValidDateFormat` 的方法，该方法接受两个参数：`dateStr`(需要检查的日期字符串)和 `dateFormat`(指定的日期格式)。方法内部使用 `DateUtil.parse()` 方法尝试将字符串解析为日期对象。如果解析成功且日期格式与指定的格式相符，则返回 `true`;否则返回 `false`。","slug":"一行代码判断字符串是否为某格式的时间","published":1,"updated":"2023-07-06T14:57:01.539Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljra6f880006ug0g9q8p2sxv","content":"<p>在开发中遇到需要判断某个字符串是否为某种格式（如<code>yyyyMMdd</code>、<code>yyyy-MM-dd</code>等）的时间的需求，没有找到已有的一键解决的api，所以自己写了一个</p>\n<p>方法本体：</p>\n<p>注：方法中的<code>ObjectUtil</code>和<code>DateUtil</code>均为hutool中的包</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 判断字符串是否为指定格式的日期时间</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> dateStr    需要检查的日期字符串</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> dateFormat 指定的日期格式，例如：&quot;yyyyMMdd&quot;, &quot;yyyy-MM-dd&quot;, &quot;yyyy/MM/dd&quot; 等</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> 如果字符串是指定格式的日期时间，返回 true;否则返回 false。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isValidDateFormat</span><span class=\"params\">(String dateStr, String dateFormat)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ObjectUtil.isEmpty(dateStr)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        DateUtil.parse(dateStr, dateFormat); <span class=\"comment\">// 将字符串解析为日期对象，如果解析成功，则说明字符串是有效的日期格式；否则说明字符串不是有效的日期格式。</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>测试：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 测试isValidDateFormat方法</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">dateStr</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;2021-03-44&quot;</span>; <span class=\"comment\">// 需要检查的日期字符串</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">dateFormat</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;yyyy-MM-dd&quot;</span>; <span class=\"comment\">// 指定的日期格式</span></span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"variable\">isValidDate</span> <span class=\"operator\">=</span> isValidDateFormat(dateStr, dateFormat);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;字符串 &quot;</span> + dateStr + <span class=\"string\">&quot; 是否为格式为 &#x27;&quot;</span> + dateFormat + <span class=\"string\">&quot;&#x27; 的时间：&quot;</span> + isValidDate);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>结果：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串 <span class=\"number\">2021</span>-<span class=\"number\">03</span>-<span class=\"number\">01</span> 是否为格式为 <span class=\"string\">&#x27;yyyy-MM-dd&#x27;</span> 的时间：<span class=\"literal\">true</span></span><br><span class=\"line\">字符串 2aaaa 是否为格式为 <span class=\"string\">&#x27;yyyy-MM-dd&#x27;</span> 的时间：<span class=\"literal\">false</span></span><br><span class=\"line\">字符串 <span class=\"number\">20230102</span> 是否为格式为 <span class=\"string\">&#x27;yyyyMMdd&#x27;</span> 的时间：<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>原理：</p>\n<p>定义了一个名为 <code>isValidDateFormat</code> 的方法，该方法接受两个参数：<code>dateStr</code>(需要检查的日期字符串)和 <code>dateFormat</code>(指定的日期格式)。方法内部使用 <code>DateUtil.parse()</code> 方法尝试将字符串解析为日期对象。如果解析成功且日期格式与指定的格式相符，则返回 <code>true</code>;否则返回 <code>false</code>。</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>在开发中遇到需要判断某个字符串是否为某种格式（如<code>yyyyMMdd</code>、<code>yyyy-MM-dd</code>等）的时间的需求，没有找到已有的一键解决的api，所以自己写了一个</p>\n<p>方法本体：</p>\n<p>注：方法中的<code>ObjectUtil</code>和<code>DateUtil</code>均为hutool中的包</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 判断字符串是否为指定格式的日期时间</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> dateStr    需要检查的日期字符串</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> dateFormat 指定的日期格式，例如：&quot;yyyyMMdd&quot;, &quot;yyyy-MM-dd&quot;, &quot;yyyy/MM/dd&quot; 等</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> 如果字符串是指定格式的日期时间，返回 true;否则返回 false。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isValidDateFormat</span><span class=\"params\">(String dateStr, String dateFormat)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ObjectUtil.isEmpty(dateStr)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        DateUtil.parse(dateStr, dateFormat); <span class=\"comment\">// 将字符串解析为日期对象，如果解析成功，则说明字符串是有效的日期格式；否则说明字符串不是有效的日期格式。</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>测试：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 测试isValidDateFormat方法</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">dateStr</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;2021-03-44&quot;</span>; <span class=\"comment\">// 需要检查的日期字符串</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">dateFormat</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;yyyy-MM-dd&quot;</span>; <span class=\"comment\">// 指定的日期格式</span></span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"variable\">isValidDate</span> <span class=\"operator\">=</span> isValidDateFormat(dateStr, dateFormat);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;字符串 &quot;</span> + dateStr + <span class=\"string\">&quot; 是否为格式为 &#x27;&quot;</span> + dateFormat + <span class=\"string\">&quot;&#x27; 的时间：&quot;</span> + isValidDate);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>结果：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串 <span class=\"number\">2021</span>-<span class=\"number\">03</span>-<span class=\"number\">01</span> 是否为格式为 <span class=\"string\">&#x27;yyyy-MM-dd&#x27;</span> 的时间：<span class=\"literal\">true</span></span><br><span class=\"line\">字符串 2aaaa 是否为格式为 <span class=\"string\">&#x27;yyyy-MM-dd&#x27;</span> 的时间：<span class=\"literal\">false</span></span><br><span class=\"line\">字符串 <span class=\"number\">20230102</span> 是否为格式为 <span class=\"string\">&#x27;yyyyMMdd&#x27;</span> 的时间：<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>原理：</p>\n<p>定义了一个名为 <code>isValidDateFormat</code> 的方法，该方法接受两个参数：<code>dateStr</code>(需要检查的日期字符串)和 <code>dateFormat</code>(指定的日期格式)。方法内部使用 <code>DateUtil.parse()</code> 方法尝试将字符串解析为日期对象。如果解析成功且日期格式与指定的格式相符，则返回 <code>true</code>;否则返回 <code>false</code>。</p>\n"},{"title":"网站介绍","date":"2023-05-12T01:02:39.000Z","author":"ice","top":1,"_content":"\n> 从2022年中开始，就已经有了创建自己的博客网站的想法，那个时候就找了使用hexo创建网站的文章，但那个时候没研究过前端，进度一直卡在一开始的node安装上，折腾出一个开始页面之后就有些懈怠了，再之后就不了了之。\n\n> 后来也有几次建站的想法，但因为毕业，找工作等原因一直搁置了，直到现在。\n\n> 我的本科是机械，因为对计算机行业的兴趣，在女朋友的支持下，转行到了互联网行业，目前在南京从事java后端的岗位。\n\n> 网站使用hexo框架，主题是butterfly。\n\n>网站的主页封面是原神中的角色，宵宫，是我在这个游戏中最爱的角色。我很爱她对生活的热情，同时也希望自己能对生活抱有更多的期待。\n\n>网站的名字取自我的外号以及女朋友的外号。之后我会在这个网站持续更新技术博客以及生活中的所思所想。\n\n> 未完待续...\n","source":"_posts/网站介绍.md","raw":"---\ntitle: 网站介绍\ndate: 2023-05-12 09:02:39\nauthor: ice\ntags:\n- 博客\n- 网站\ncategories:\n- 记录\ntop: 1\n---\n\n> 从2022年中开始，就已经有了创建自己的博客网站的想法，那个时候就找了使用hexo创建网站的文章，但那个时候没研究过前端，进度一直卡在一开始的node安装上，折腾出一个开始页面之后就有些懈怠了，再之后就不了了之。\n\n> 后来也有几次建站的想法，但因为毕业，找工作等原因一直搁置了，直到现在。\n\n> 我的本科是机械，因为对计算机行业的兴趣，在女朋友的支持下，转行到了互联网行业，目前在南京从事java后端的岗位。\n\n> 网站使用hexo框架，主题是butterfly。\n\n>网站的主页封面是原神中的角色，宵宫，是我在这个游戏中最爱的角色。我很爱她对生活的热情，同时也希望自己能对生活抱有更多的期待。\n\n>网站的名字取自我的外号以及女朋友的外号。之后我会在这个网站持续更新技术博客以及生活中的所思所想。\n\n> 未完待续...\n","slug":"网站介绍","published":1,"updated":"2023-07-06T14:57:07.122Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljra6f8b0007ug0g1lfq75cn","content":"<blockquote>\n<p>从2022年中开始，就已经有了创建自己的博客网站的想法，那个时候就找了使用hexo创建网站的文章，但那个时候没研究过前端，进度一直卡在一开始的node安装上，折腾出一个开始页面之后就有些懈怠了，再之后就不了了之。</p>\n</blockquote>\n<blockquote>\n<p>后来也有几次建站的想法，但因为毕业，找工作等原因一直搁置了，直到现在。</p>\n</blockquote>\n<blockquote>\n<p>我的本科是机械，因为对计算机行业的兴趣，在女朋友的支持下，转行到了互联网行业，目前在南京从事java后端的岗位。</p>\n</blockquote>\n<blockquote>\n<p>网站使用hexo框架，主题是butterfly。</p>\n</blockquote>\n<blockquote>\n<p>网站的主页封面是原神中的角色，宵宫，是我在这个游戏中最爱的角色。我很爱她对生活的热情，同时也希望自己能对生活抱有更多的期待。</p>\n</blockquote>\n<blockquote>\n<p>网站的名字取自我的外号以及女朋友的外号。之后我会在这个网站持续更新技术博客以及生活中的所思所想。</p>\n</blockquote>\n<blockquote>\n<p>未完待续…</p>\n</blockquote>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<blockquote>\n<p>从2022年中开始，就已经有了创建自己的博客网站的想法，那个时候就找了使用hexo创建网站的文章，但那个时候没研究过前端，进度一直卡在一开始的node安装上，折腾出一个开始页面之后就有些懈怠了，再之后就不了了之。</p>\n</blockquote>\n<blockquote>\n<p>后来也有几次建站的想法，但因为毕业，找工作等原因一直搁置了，直到现在。</p>\n</blockquote>\n<blockquote>\n<p>我的本科是机械，因为对计算机行业的兴趣，在女朋友的支持下，转行到了互联网行业，目前在南京从事java后端的岗位。</p>\n</blockquote>\n<blockquote>\n<p>网站使用hexo框架，主题是butterfly。</p>\n</blockquote>\n<blockquote>\n<p>网站的主页封面是原神中的角色，宵宫，是我在这个游戏中最爱的角色。我很爱她对生活的热情，同时也希望自己能对生活抱有更多的期待。</p>\n</blockquote>\n<blockquote>\n<p>网站的名字取自我的外号以及女朋友的外号。之后我会在这个网站持续更新技术博客以及生活中的所思所想。</p>\n</blockquote>\n<blockquote>\n<p>未完待续…</p>\n</blockquote>\n"},{"title":"以热爱为前提写代码-读码农翻身有感","date":"2023-07-01T14:48:00.000Z","author":"ice","_content":"\n![image-20230627101223207](https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627101223207.png)\n\n  今天阅读了码农翻身这本书，看到一半就去关注作者的公众号了，因为这本书真的太好看了。\n\n  我很少用好看来形容一本编程书籍，通常我会使用`专业`，`技术底蕴深厚`等词汇来形容此类书籍，不过码农翻身这本书也不仅仅是纯粹的编程书籍，它把很多知识点通过讲故事的方式讲解出来，让人在读完之后发出：'原来这个东西的原理是这样的呀'的感慨。\n\n![image-20230627101741033](https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627101741033.png)\n\n\n\n![image-20230627101830462](https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627101830462.png)\n\n  抱着去了解作者的心思，去关注了他的公众号 码农翻身。作者从一篇'我是一个线程'这篇文章开始发现，大家喜欢看故事，在故事中掌握技术，就沿着这条路走了下来：用故事讲解技术的本质。作者几年如一日的积累，现在以及有了数百篇文章。\n\n  用作者的话说，写文章，一方面可以更好的掌握知识，在面试时候也能让面试官看到你的专业性，另一方面，要是阅读量高，读者多了，偶尔还能打个广告赚赚外快，岂不快哉。\n\n  在之前，我关注了很多写技术文的博主，他们或多或少也说过这样的话，而他却让我忽然心向往之。我想了想，应该是因为我也是很爱读故事的人，见到作者，就好像遇到了志同道合的道友一般，他提供的养分，被我这块挑剔的海绵急切的吸取着，让我同时在技术和精神上得到了满足。（还有一个原因是作者很喜欢郑渊洁，好巧，我也是哈哈哈）\n\n  写文章，如果能一直坚持下去，应该也是一件很了不起的事情吧。","source":"_posts/以热爱为前提写代码-读码农翻身有感.md","raw":"---\ntitle: 以热爱为前提写代码-读码农翻身有感\ndate: 2023-07-01 22:48:00\nauthor: ice\ntags:\n- 技术\n- 学习\n- 感想\n- 写作\ncategories:\n- 记录\n---\n\n![image-20230627101223207](https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627101223207.png)\n\n  今天阅读了码农翻身这本书，看到一半就去关注作者的公众号了，因为这本书真的太好看了。\n\n  我很少用好看来形容一本编程书籍，通常我会使用`专业`，`技术底蕴深厚`等词汇来形容此类书籍，不过码农翻身这本书也不仅仅是纯粹的编程书籍，它把很多知识点通过讲故事的方式讲解出来，让人在读完之后发出：'原来这个东西的原理是这样的呀'的感慨。\n\n![image-20230627101741033](https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627101741033.png)\n\n\n\n![image-20230627101830462](https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627101830462.png)\n\n  抱着去了解作者的心思，去关注了他的公众号 码农翻身。作者从一篇'我是一个线程'这篇文章开始发现，大家喜欢看故事，在故事中掌握技术，就沿着这条路走了下来：用故事讲解技术的本质。作者几年如一日的积累，现在以及有了数百篇文章。\n\n  用作者的话说，写文章，一方面可以更好的掌握知识，在面试时候也能让面试官看到你的专业性，另一方面，要是阅读量高，读者多了，偶尔还能打个广告赚赚外快，岂不快哉。\n\n  在之前，我关注了很多写技术文的博主，他们或多或少也说过这样的话，而他却让我忽然心向往之。我想了想，应该是因为我也是很爱读故事的人，见到作者，就好像遇到了志同道合的道友一般，他提供的养分，被我这块挑剔的海绵急切的吸取着，让我同时在技术和精神上得到了满足。（还有一个原因是作者很喜欢郑渊洁，好巧，我也是哈哈哈）\n\n  写文章，如果能一直坚持下去，应该也是一件很了不起的事情吧。","slug":"以热爱为前提写代码-读码农翻身有感","published":1,"updated":"2023-07-06T14:56:55.508Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljra6f8c0008ug0g8yr1cxos","content":"<p><img src=\"https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627101223207.png\" alt=\"image-20230627101223207\"></p>\n<p>  今天阅读了码农翻身这本书，看到一半就去关注作者的公众号了，因为这本书真的太好看了。</p>\n<p>  我很少用好看来形容一本编程书籍，通常我会使用<code>专业</code>，<code>技术底蕴深厚</code>等词汇来形容此类书籍，不过码农翻身这本书也不仅仅是纯粹的编程书籍，它把很多知识点通过讲故事的方式讲解出来，让人在读完之后发出：’原来这个东西的原理是这样的呀’的感慨。</p>\n<p><img src=\"https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627101741033.png\" alt=\"image-20230627101741033\"></p>\n<p><img src=\"https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627101830462.png\" alt=\"image-20230627101830462\"></p>\n<p>  抱着去了解作者的心思，去关注了他的公众号 码农翻身。作者从一篇’我是一个线程’这篇文章开始发现，大家喜欢看故事，在故事中掌握技术，就沿着这条路走了下来：用故事讲解技术的本质。作者几年如一日的积累，现在以及有了数百篇文章。</p>\n<p>  用作者的话说，写文章，一方面可以更好的掌握知识，在面试时候也能让面试官看到你的专业性，另一方面，要是阅读量高，读者多了，偶尔还能打个广告赚赚外快，岂不快哉。</p>\n<p>  在之前，我关注了很多写技术文的博主，他们或多或少也说过这样的话，而他却让我忽然心向往之。我想了想，应该是因为我也是很爱读故事的人，见到作者，就好像遇到了志同道合的道友一般，他提供的养分，被我这块挑剔的海绵急切的吸取着，让我同时在技术和精神上得到了满足。（还有一个原因是作者很喜欢郑渊洁，好巧，我也是哈哈哈）</p>\n<p>  写文章，如果能一直坚持下去，应该也是一件很了不起的事情吧。</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p><img src=\"https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627101223207.png\" alt=\"image-20230627101223207\"></p>\n<p>  今天阅读了码农翻身这本书，看到一半就去关注作者的公众号了，因为这本书真的太好看了。</p>\n<p>  我很少用好看来形容一本编程书籍，通常我会使用<code>专业</code>，<code>技术底蕴深厚</code>等词汇来形容此类书籍，不过码农翻身这本书也不仅仅是纯粹的编程书籍，它把很多知识点通过讲故事的方式讲解出来，让人在读完之后发出：’原来这个东西的原理是这样的呀’的感慨。</p>\n<p><img src=\"https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627101741033.png\" alt=\"image-20230627101741033\"></p>\n<p><img src=\"https://icepeachpicture.oss-cn-shanghai.aliyuncs.com/ice/image-20230627101830462.png\" alt=\"image-20230627101830462\"></p>\n<p>  抱着去了解作者的心思，去关注了他的公众号 码农翻身。作者从一篇’我是一个线程’这篇文章开始发现，大家喜欢看故事，在故事中掌握技术，就沿着这条路走了下来：用故事讲解技术的本质。作者几年如一日的积累，现在以及有了数百篇文章。</p>\n<p>  用作者的话说，写文章，一方面可以更好的掌握知识，在面试时候也能让面试官看到你的专业性，另一方面，要是阅读量高，读者多了，偶尔还能打个广告赚赚外快，岂不快哉。</p>\n<p>  在之前，我关注了很多写技术文的博主，他们或多或少也说过这样的话，而他却让我忽然心向往之。我想了想，应该是因为我也是很爱读故事的人，见到作者，就好像遇到了志同道合的道友一般，他提供的养分，被我这块挑剔的海绵急切的吸取着，让我同时在技术和精神上得到了满足。（还有一个原因是作者很喜欢郑渊洁，好巧，我也是哈哈哈）</p>\n<p>  写文章，如果能一直坚持下去，应该也是一件很了不起的事情吧。</p>\n"},{"title":"跨域问题后端配置，粘贴即用！","date":"2023-06-01T02:03:34.000Z","author":"ice","_content":"\n直接新建一个CorsConfig类，把一下代码粘贴就可以了\n> 需要注意的是，设置允许跨域请求的源地址和请求头时，应该只允许必要的来源和请求头，以避免潜在的安全风险。\n> 另外，需要根据具体的业务需求，对跨域请求的有效时长进行合理的设置。\n```\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.cors.CorsConfiguration;\nimport org.springframework.web.cors.UrlBasedCorsConfigurationSource;\nimport org.springframework.web.filter.CorsFilter;\n\n/**\n * @author ice\n */\n@Configuration\npublic class CorsConfig {\n\n    /**\n     * 当前跨域请求最大有效时长。这里默认1天\n     */\n    private static final long MAX_AGE = 24 * 60 * 60;\n\n    @Bean\n    public CorsFilter corsFilter() {\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n        CorsConfiguration corsConfiguration = new CorsConfiguration();\n        // 1 设置访问源地址\n        corsConfiguration.addAllowedOrigin(\"*\");\n        // 2 设置访问源请求头\n        corsConfiguration.addAllowedHeader(\"*\");\n        // 3 设置访问源请求方法\n        corsConfiguration.addAllowedMethod(\"*\");\n        corsConfiguration.setMaxAge(MAX_AGE);\n        // 4 对接口配置跨域设置\n        source.registerCorsConfiguration(\"/**\", corsConfiguration);\n        return new CorsFilter(source);\n    }\n}\n```","source":"_posts/跨域问题后端配置，粘贴即用！.md","raw":"---\ntitle: 跨域问题后端配置，粘贴即用！\ndate: 2023-06-01 10:03:34\nauthor: ice\ntags:\n- springboot\n- java\n- 跨域\n- 配置类\ncategories:\n- 从头创建一个新项目可能需要的配置\n---\n\n直接新建一个CorsConfig类，把一下代码粘贴就可以了\n> 需要注意的是，设置允许跨域请求的源地址和请求头时，应该只允许必要的来源和请求头，以避免潜在的安全风险。\n> 另外，需要根据具体的业务需求，对跨域请求的有效时长进行合理的设置。\n```\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.cors.CorsConfiguration;\nimport org.springframework.web.cors.UrlBasedCorsConfigurationSource;\nimport org.springframework.web.filter.CorsFilter;\n\n/**\n * @author ice\n */\n@Configuration\npublic class CorsConfig {\n\n    /**\n     * 当前跨域请求最大有效时长。这里默认1天\n     */\n    private static final long MAX_AGE = 24 * 60 * 60;\n\n    @Bean\n    public CorsFilter corsFilter() {\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n        CorsConfiguration corsConfiguration = new CorsConfiguration();\n        // 1 设置访问源地址\n        corsConfiguration.addAllowedOrigin(\"*\");\n        // 2 设置访问源请求头\n        corsConfiguration.addAllowedHeader(\"*\");\n        // 3 设置访问源请求方法\n        corsConfiguration.addAllowedMethod(\"*\");\n        corsConfiguration.setMaxAge(MAX_AGE);\n        // 4 对接口配置跨域设置\n        source.registerCorsConfiguration(\"/**\", corsConfiguration);\n        return new CorsFilter(source);\n    }\n}\n```","slug":"跨域问题后端配置，粘贴即用！","published":1,"updated":"2023-07-06T14:57:08.961Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljra6f9s001bug0g5ol0731t","content":"<p>直接新建一个CorsConfig类，把一下代码粘贴就可以了</p>\n<blockquote>\n<p>需要注意的是，设置允许跨域请求的源地址和请求头时，应该只允许必要的来源和请求头，以避免潜在的安全风险。<br>另外，需要根据具体的业务需求，对跨域请求的有效时长进行合理的设置。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import org.springframework.context.annotation.Bean;</span><br><span class=\"line\">import org.springframework.context.annotation.Configuration;</span><br><span class=\"line\">import org.springframework.web.cors.CorsConfiguration;</span><br><span class=\"line\">import org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class=\"line\">import org.springframework.web.filter.CorsFilter;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * @author ice</span><br><span class=\"line\"> */</span><br><span class=\"line\">@Configuration</span><br><span class=\"line\">public class CorsConfig &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 当前跨域请求最大有效时长。这里默认1天</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private static final long MAX_AGE = 24 * 60 * 60;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Bean</span><br><span class=\"line\">    public CorsFilter corsFilter() &#123;</span><br><span class=\"line\">        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();</span><br><span class=\"line\">        CorsConfiguration corsConfiguration = new CorsConfiguration();</span><br><span class=\"line\">        // 1 设置访问源地址</span><br><span class=\"line\">        corsConfiguration.addAllowedOrigin(&quot;*&quot;);</span><br><span class=\"line\">        // 2 设置访问源请求头</span><br><span class=\"line\">        corsConfiguration.addAllowedHeader(&quot;*&quot;);</span><br><span class=\"line\">        // 3 设置访问源请求方法</span><br><span class=\"line\">        corsConfiguration.addAllowedMethod(&quot;*&quot;);</span><br><span class=\"line\">        corsConfiguration.setMaxAge(MAX_AGE);</span><br><span class=\"line\">        // 4 对接口配置跨域设置</span><br><span class=\"line\">        source.registerCorsConfiguration(&quot;/**&quot;, corsConfiguration);</span><br><span class=\"line\">        return new CorsFilter(source);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>直接新建一个CorsConfig类，把一下代码粘贴就可以了</p>\n<blockquote>\n<p>需要注意的是，设置允许跨域请求的源地址和请求头时，应该只允许必要的来源和请求头，以避免潜在的安全风险。<br>另外，需要根据具体的业务需求，对跨域请求的有效时长进行合理的设置。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import org.springframework.context.annotation.Bean;</span><br><span class=\"line\">import org.springframework.context.annotation.Configuration;</span><br><span class=\"line\">import org.springframework.web.cors.CorsConfiguration;</span><br><span class=\"line\">import org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class=\"line\">import org.springframework.web.filter.CorsFilter;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * @author ice</span><br><span class=\"line\"> */</span><br><span class=\"line\">@Configuration</span><br><span class=\"line\">public class CorsConfig &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 当前跨域请求最大有效时长。这里默认1天</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private static final long MAX_AGE = 24 * 60 * 60;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Bean</span><br><span class=\"line\">    public CorsFilter corsFilter() &#123;</span><br><span class=\"line\">        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();</span><br><span class=\"line\">        CorsConfiguration corsConfiguration = new CorsConfiguration();</span><br><span class=\"line\">        // 1 设置访问源地址</span><br><span class=\"line\">        corsConfiguration.addAllowedOrigin(&quot;*&quot;);</span><br><span class=\"line\">        // 2 设置访问源请求头</span><br><span class=\"line\">        corsConfiguration.addAllowedHeader(&quot;*&quot;);</span><br><span class=\"line\">        // 3 设置访问源请求方法</span><br><span class=\"line\">        corsConfiguration.addAllowedMethod(&quot;*&quot;);</span><br><span class=\"line\">        corsConfiguration.setMaxAge(MAX_AGE);</span><br><span class=\"line\">        // 4 对接口配置跨域设置</span><br><span class=\"line\">        source.registerCorsConfiguration(&quot;/**&quot;, corsConfiguration);</span><br><span class=\"line\">        return new CorsFilter(source);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cljra6f7v0001ug0g8zbffmqk","category_id":"cljra6f850004ug0gf1xv8ubn","_id":"cljra6f8g000bug0g5c3e1akx"},{"post_id":"cljra6f820003ug0g86cf53fr","category_id":"cljra6f8e0009ug0gfuzj4ntm","_id":"cljra6f8j000fug0g61sy4g6j"},{"post_id":"cljra6f880006ug0g9q8p2sxv","category_id":"cljra6f8e0009ug0gfuzj4ntm","_id":"cljra6f8l000iug0gciuk2tjz"},{"post_id":"cljra6f8b0007ug0g1lfq75cn","category_id":"cljra6f8j000eug0g5t3358ib","_id":"cljra6f8m000nug0g808ngx1c"},{"post_id":"cljra6f8c0008ug0g8yr1cxos","category_id":"cljra6f8j000eug0g5t3358ib","_id":"cljra6f8n000qug0g9qce2qil"},{"post_id":"cljra6f9s001bug0g5ol0731t","category_id":"cljra6f850004ug0gf1xv8ubn","_id":"cljra6f9v001dug0gc6hwbza6"}],"PostTag":[{"post_id":"cljra6f7v0001ug0g8zbffmqk","tag_id":"cljra6f880005ug0g4izu54fs","_id":"cljra6f8k000hug0g4pv18wx9"},{"post_id":"cljra6f7v0001ug0g8zbffmqk","tag_id":"cljra6f8e000aug0g6e9qgacw","_id":"cljra6f8l000jug0gf5lmgvuh"},{"post_id":"cljra6f7v0001ug0g8zbffmqk","tag_id":"cljra6f8h000dug0g38obbp5f","_id":"cljra6f8m000mug0g8x0h79br"},{"post_id":"cljra6f820003ug0g86cf53fr","tag_id":"cljra6f8k000gug0gc9ar5du1","_id":"cljra6f8n000pug0gcgyi47bg"},{"post_id":"cljra6f820003ug0g86cf53fr","tag_id":"cljra6f8l000lug0g2zjk93ta","_id":"cljra6f8n000rug0g8z34cdnq"},{"post_id":"cljra6f880006ug0g9q8p2sxv","tag_id":"cljra6f8m000oug0g6c5i0glv","_id":"cljra6f8p000wug0gfq419hyc"},{"post_id":"cljra6f880006ug0g9q8p2sxv","tag_id":"cljra6f8n000sug0g0sf1a9uy","_id":"cljra6f8q000xug0g8kka43tk"},{"post_id":"cljra6f880006ug0g9q8p2sxv","tag_id":"cljra6f8e000aug0g6e9qgacw","_id":"cljra6f8q000zug0g1s6990be"},{"post_id":"cljra6f880006ug0g9q8p2sxv","tag_id":"cljra6f8o000uug0g8khuc8xz","_id":"cljra6f8q0010ug0g8tvq40xe"},{"post_id":"cljra6f8b0007ug0g1lfq75cn","tag_id":"cljra6f8p000vug0gh29c9jze","_id":"cljra6f8r0012ug0gbqbv79lj"},{"post_id":"cljra6f8b0007ug0g1lfq75cn","tag_id":"cljra6f8q000yug0gh9rya77q","_id":"cljra6f8r0013ug0g8rs40g45"},{"post_id":"cljra6f8c0008ug0g8yr1cxos","tag_id":"cljra6f8q0011ug0ggmwma6cd","_id":"cljra6f8t0017ug0g9vgq2014"},{"post_id":"cljra6f8c0008ug0g8yr1cxos","tag_id":"cljra6f8r0014ug0g0scs0980","_id":"cljra6f8t0018ug0g406hbdws"},{"post_id":"cljra6f8c0008ug0g8yr1cxos","tag_id":"cljra6f8s0015ug0gd0omhdsr","_id":"cljra6f8t0019ug0g96x06kgo"},{"post_id":"cljra6f8c0008ug0g8yr1cxos","tag_id":"cljra6f8s0016ug0gfd2t7zy6","_id":"cljra6f8t001aug0g4fz57i9l"},{"post_id":"cljra6f9s001bug0g5ol0731t","tag_id":"cljra6f880005ug0g4izu54fs","_id":"cljra6f9w001fug0gd4ba4jdb"},{"post_id":"cljra6f9s001bug0g5ol0731t","tag_id":"cljra6f8e000aug0g6e9qgacw","_id":"cljra6f9w001gug0g380zfcn5"},{"post_id":"cljra6f9s001bug0g5ol0731t","tag_id":"cljra6f9u001cug0g4397hgah","_id":"cljra6f9w001hug0g53m9c8h3"},{"post_id":"cljra6f9s001bug0g5ol0731t","tag_id":"cljra6f9v001eug0g3n3z1i5x","_id":"cljra6f9w001iug0ggbq9eqtr"}],"Tag":[{"name":"springboot","_id":"cljra6f880005ug0g4izu54fs"},{"name":"java","_id":"cljra6f8e000aug0g6e9qgacw"},{"name":"mybatis-plus","_id":"cljra6f8h000dug0g38obbp5f"},{"name":"Windows","_id":"cljra6f8k000gug0gc9ar5du1"},{"name":"端口","_id":"cljra6f8l000lug0g2zjk93ta"},{"name":"date","_id":"cljra6f8m000oug0g6c5i0glv"},{"name":"hutool","_id":"cljra6f8n000sug0g0sf1a9uy"},{"name":"工具类","_id":"cljra6f8o000uug0g8khuc8xz"},{"name":"博客","_id":"cljra6f8p000vug0gh29c9jze"},{"name":"网站","_id":"cljra6f8q000yug0gh9rya77q"},{"name":"技术","_id":"cljra6f8q0011ug0ggmwma6cd"},{"name":"学习","_id":"cljra6f8r0014ug0g0scs0980"},{"name":"感想","_id":"cljra6f8s0015ug0gd0omhdsr"},{"name":"写作","_id":"cljra6f8s0016ug0gfd2t7zy6"},{"name":"跨域","_id":"cljra6f9u001cug0g4397hgah"},{"name":"配置类","_id":"cljra6f9v001eug0g3n3z1i5x"}]}}